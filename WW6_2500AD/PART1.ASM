;
 TITLE PART1
 PAGE
;
 PUBLIC AXASCII
 PUBLIC BEGINWW
 PUBLIC CLSNUM
 PUBLIC COLUMN_OUT
 PUBLIC ENTERW
 PUBLIC INITIL
 PUBLIC LOAD_NEW1
 PUBLIC MERNAM
 PUBLIC MULT_A_10
 PUBLIC PROMPT_AND_NUMBER
 PUBLIC SETSCN
 PUBLIC SET_MARGIN
 PUBLIC SPKEYS
 PUBLIC STTEXT_TO_TEXT
 PUBLIC TEXT_PLS_RETSPCEOT
 PUBLIC QSAVE1
;
 EXTERN AX_INTO_LEFPRT
 EXTERN TEXT_TO_EDIT_BUFFER
 EXTERN EDIT_LINE
 EXTERN NEW_LINES_PAGE         ;PRINT
 EXTERN D_PIXELS_PER_LINE
 EXTERN PROCESS_LINE           ;EDITLN
 EXTERN STARTRAM               ;BEGIN RAM USE        ENDMOD
 EXTERN THESAURUS              ;READ THS WORD        THESRUS
 EXTERN D_TOTAL_VERTICAL_PIXELS
;
LINES_PER_PAGE EQU 66
;
;
BEGINWW: ;WHERE IT ALL STARTS
;
MNLINE:
 LDX #$FF
 TXS
 INX                       ;[0]
 STX SAVE_LOAD_STRING_LEN  ;NO CURRENT FILENAME     
 STX STACKY
 STX MOVE_COPY_HL
 STX EXPAND_ON
;
 JSR CLRBLK 		   ;PAINT SCREEN
 JSR INITIL 		   ;RESTRT
;
;CLEAR_HOME_ENTRY:
 JSR LINLEN
;
PANIC:
 JSR HEADER
;
 JSR TEXT_TO_EDIT_BUFFER
;
 JSR SET_TO_TEXT_OR_GRAPHICS
 LDA CURRENT_POINTSIZE
 STA BIGGEST_POINTSIZE
;
MNLOOP:
;
 JSR DISPLY
 JMP PROCESS_LINE
;
ENTERW:
;PANIC ENTRY
 LDX #$FF
 TXS
 INX
 STX STACKY
 JSR FULL_SCREEN
 JMP MNLOOP
;
INIT_BLOCK_TWO:
;
 JSR SETZRP
;
 JSR PSHEOT 		;SAVE EOT
 LDA SAVEOT+1
 CLC
 ADC #9
 STA STTEXT+1
 LDA SAVEOT
 STA STTEXT
;(FT):INITIL
;
INITIL:
 LDY #0
;
 STY EDIT_BUFFER_CHANGED
 STY CHAR_WIDTH_ADJUST
 STY DOCUMENT_ALTERED
 STY CURFLG           ;DISALLOW EXTEND
 STY COUNT
 STY COLUMN
;
 JSR STTEXT_TO_TEXT
; 
 JSR DECTE1
 JSR RESPET 		;RET SPC EOT
NOINIT:
 LDX #1
 STX PAGE
 STX LINE
 LDA STTEXT+1 		;HB STTEXT
INLOOP:
 STA EOT,X
 STA TEXPAG,X
 STA TEXTMO,X
 STA TEXT,X
 LDA STTEXT
 DEX
 BPL INLOOP
;
 JSR INCEO1
;
 JSR NEW_LINES_PAGE 	;SET LINSPG TO CORRECT VALUE
;
SETSCN:
 LDA #>VIDEO 		;SCRN
 STA SCRMO+1
 STA SCREEN+1
 LDA #0
 STA CURRENT_SCREEN_LINE
 LDA #<VIDEO+$50 	;SCRN LO
 STA SCRMO
 STA SCREEN
 RTS
;
STTEXT_TO_TEXT:
 LDA STTEXT             ;LEAVE CARRY UNHARMED
 LDX STTEXT+1
 JMP AX_INTO_TEXT
;
LINLEN:
;
 JSR SET_VMARGINS
 LDA #0
 TAX
 JSR AX_INTO_CUR_PAGE_LENGTH
;
;
SET_MARGIN:
;
 LDX #0
 STX EXPAND_ON
 STX USER_DEFINED_LEAD   ;DEFAULT LEADING
 STX FONT_LEADING        ;DEFAULT LEADING
;
SET_MARGIN_ONLY: 
; 
 LDA #10
 JSR SET_LEFT_MARGIN
 LDA #60
 JMP SET_LINE_MARGIN
;
PROMPT_AND_NUMBER:
 JSR SERPPT              ;'PRINTER(4/5)?'
;
;(FT)
;
HEXIN:
; LDX #4
; LDA #'*'
;HEXIN0:
; STA VIDEO,X
; DEX
; BPL HEXIN0
;
 LDA #4
HEXMSL:
 JSR INPUTS
 BCS HEEXIT        ;CURSOR UP/DOWN  
;
 JSR HEXIN1
 BCS HEXIN
 RTS
; 
HEXIN1:
 LDX #0
 STX TEMP1
HEGET:
 LDA INPBUF,X
 CPX MSLEN
 BEQ HEOUT
 JSR CHKNUM
; BCS HEXIN
 BCS HEEXIT        ;ERROR, EXIT CS
;
 STA TEMP0
 LDA TEMP1
 CMP #26           ;26*10=OVERFLOW
; BCS HEXIN
 BCS HEEXIT        ;ERROR, EXIT CS
 JSR MULT_A_PART
 ADC TEMP0
 STA TEMP1
 INX
 BNE HEGET
HEOUT:
 LDA TEMP1
 CLC
HEEXIT:
 RTS
;
;
MULT_A_10:
 STA TEMP1
MULT_A_PART:
 ASL A ;*2
 ASL A ;*4
 CLC
 ADC TEMP1 ;*5
 ASL A ;*10
 RTS
;
;
HEADER:
 LDX #$27
?LOOP:
 LDA HEADAT,X
 STA VIDEO,X 
 LDA #119
 STA VIDEO+40,X
 DEX
 BPL ?LOOP
 JSR ACTUAL_COLUMN_OUT
 JSR LINE_OUT
;
PAGOUT:
 LDA PAGE
 JSR HEXOUT
;*NOTE* COULD BE HEXOUT IF .X CAN BE HARMED
; STA VIDEO+$1C
; LDA TEMP1
; STA VIDEO+$1B
; RTS
 LDX #$1A
 JMP PAG_LIN_COL_OUT
;
;
TEXT_PLS_RETSPCEOT:
RESPET:
 LDA #ENDT
 LDY #2
 STA (TEXT),Y
 DEY
 LDA #$20
 STA (TEXT),Y
 DEY
RET_AT_TEXT_Y:
 LDA #RETURN
 STA (TEXT),Y
 RTS
;
;
ACTUAL_COLUMN_OUT:
;
 LDA ACTUAL_COLUMN
;
COLUMN_OUT:
;
 LDY DISPLY
 CPY #$60
 BEQ PLCO_EXIT
;
 JSR HEXOUT
;(FT)
 LDX #$25
.IF REMOVE_TEXT
 STA VIDEO+$27
 LDA TEMP0
 CMP #'0'
 BNE ?SKP
 LDA #' '
?SKP:
 STA VIDEO+$25
 LDA TEMP1
 STA VIDEO+$26
?EXIT:
 RTS
.ENDIF
;
; 
PAG_LIN_COL_OUT:
 LDY #' '		;MOST COMMON = SPACE
PAG_LIN_COL_OUT1:
 STA VIDEO+2,X		;SET ONES PLACE,X
 LDA TEMP0		;ARE THERE HUNDREDS?
 CMP #'0'		;IF YES, THEN
 BNE ?SKP		;BRANCH AND STORE
 TYA			;SET COLON OR SPACE
?SKP:
 STA VIDEO,X		;STORE HUNDREDS PLACE,X
 LDA TEMP1		;GET TENS PLACE
 STA VIDEO+1,X		;STORE TENS PLACE
PLCO_EXIT:
 RTS
;
;
AXASCII:
 JSR HEXOUT 	;.A ASCII ONES .X ASCII TENS
 LDX TEMP1 	;TENS PLACE
 RTS
;
HEXOUT:
 LDY #$30
 STY TEMP0
 STY TEMP1
;
HETHUN:
 CMP #$64       ;>100
 BCC HETTEN
 SBC #$64
 INC TEMP0
 BNE HETHUN
HETTEN:
 CMP #$A        ;>10
 BCC HETENS
 SBC #$A
 INC TEMP1
 BNE HETTEN
HETENS:
;
 ADC #'0' 
 STA TEMP2
 RTS
;
;
CLRAXY:
 LDA #0
 TAX
 TAY
 RTS
;
;
DECTE1:
 LDA TEXT
 BNE ?SKP
 DEC TEXT+1
?SKP:
 DEC TEXT
 RTS
;
;
SPKEYS:
;
;
FC_DISK_COMMAND:
 LDA #USE_DATA_DISK
 STA REGLOAD
;
 JSR OPEN_C_15
;
 LDX #$D
 JSR SERPPT
;
 JSR STATUS
 BCC ?NO_ERROR
 JSR WAIT_FOR_KEY 
;
?NO_ERROR:
;
 JSR CLOSE15
 LDA #39
 STA MSLEN
 LDX #$D
 JSR SERPPT
 JSR INPUT
 LDA MSLEN
 LDX #<INPBUF 
 LDY #>INPBUF      ;POINT AT COMMAND
 JSR OPEN15
DSKCM1:
 JMP ENDLOD 
;
;
WAIT_FOR_KEY:
 JSR GETIN
 BEQ WAIT_FOR_KEY
 RTS
;
;
FC_CHANGE_DEVICE:
;
 LDX #49
 JSR PROMPT_AND_NUMBER
 CMP #4
 BCC CHNGD4
 CMP #7
 BCS CHNGD4
CHNGD3:
 STA PRTDEVICE           ;SET NEW PRINTER DEV#
; 
CHNGD4:
 JMP FULL_SCREEN
;
;
SAVLO6:
SAVE_DOCUMENT:
 LDX #22              ;SAVE DOCUMENT?
SAVE_DOCUMENT_1:      ;USE YOUR OWN PROMPT
 STX MERPTR           ;0 = SAVE ERROR, NZ = OK
;
 LDA #0
 JSR DISKIN           ;IS DRIVE OK? 
 BCC ?PROMPT
; 
 LDA #0
 STA MERPTR           ;SAVE ERROR!
 RTS
;
?PROMPT:
 LDX MERPTR
 STX TEMP0	      ;SAVE FLAG		
 JSR PRKECY
 BEQ JSCURPO          ;GO SAVE
 CMP #'N'
 BNE ?PROMPT
;
SAVLO7:
;
 JMP FULL_SCREEN
; 
SAVNDP:
 JMP ENDLOD
;
;
FC_LOAD_FILE:
;
 LDA BLKSET	   ;IN SUSPECT WORDS?
 BNE SAVLO7
;
 LDA #0            ;SET FOR DATA PATH AND CHECK DRIVE
 JSR DISKIN
 BCS SAVLO7
 BCC SAVLO4        ;'LOAD ERASES MEMORY'
;
;
FC_SAVE_FILE:
QSAVE1:
;
 LDA #0            ;SET FOR DATA PATH AND CHECK DRIVE
 JSR DISKIN
 BCC QSDISKOK      ;BIF DRIVE OK
;
J_ENDLOD:
 JMP ENDLOD        ;CLOSE FILES AND CLEAR HOME
;
;
QSDISKOK:
 LDA #1
 STA TEMP0         ;FLAG FOR SAVE
;
JSCURPO:
 JMP SCURPO
;
;
FC_SAVE_LOAD_MERGE:
; 
 STA TEMP0      ;SAVE FLAG
 STA TEMP1      ;S/B NZ
;
 LDA #0         ;SET FOR DATA PATH.
 JSR DISKIN     ;IS DISK PRESENT
 BCS J_ENDLOD   ;NO, END_LOAD
;
SAVLO1:
 LDX #5         ;SAVE, LOAD, OR MERGE
 JSR PRKECY     
 CMP #'S'
 BEQ SCURPO     ;GO SAVE
;
; LDA BLKSET		;IF IN SUSPECT WORDS
; ORA IN_DATABASE_MODE	;OR IN CARDFILE
; BNE SAVLO7		;DON'T ALLOW
;
 CMP #'M' 
 BEQ SAVLO3     ;DO A MERGE
;
;?NO_MERGE_ALLOWED:
 CMP #'L' 
 BNE SAVLO1     ;ANOTHER KEY OR SAVE   
;
;(LOAD FILE)
SAVLO4:
;
 LDA DOCUMENT_ALTERED   ;HAS THIS DOCUMENT CHANGED?
 ORA EDIT_BUFFER_CHANGED
 BEQ ?DO_LOAD           ;IF NOT, NO CHANGED? PROMPT 
;
 LDX #$C        ;'CHANGES WILL BE LOST, ARE YOU SURE?'
 JSR PRKECY     
 BNE SAVLO6     ;GO ALLOW A SAVE
;
?DO_LOAD:
 JSR LOAD_NEW   ;SET SAVEOT TO NEW BEGINNING
 BNE MERNAM     ;GO FILENAME/LOAD
;
SAVLO3:
;
;(MERGE)
 LDA BLKSET		;IF IN SUSPECT WORDS
 ORA IN_DATABASE_MODE	;OR IN CARDFILE
 BNE SAVLO7		;DON'T ALLOW
; 
 JSR EOT_INTO_AX   ;SET EOT FOR MERGE
;
MERGE_NAMES:
 STA SAVEOT
 STX SAVEOT+1      ;SET SAVEOT TO CORRECT EOT.
;
 LDY #10
 JSR EOM_TEST_PLUS_Y     ;IF SO, ADD NEW STUFF
 BCS SAVE2
;
MERNAM:
;
 LDY #0
 STY TEMP0
 BEQ SAVLO5
;
SCURPO:         		;ENTRY FOR SAVE ONLY
 LDA TEMP0
 PHA
 JSR EDIT_BUFFER_TO_TEXT
 JSR FC_BEGINNING_OF_LINE
 JSR LSTCLR     		;CHK M LINE ONLY
;
 JSR START_OF_TEXT
 BEQ SAVLO2
;
 LDX #$14
 JSR PRKECY     		;'SAVE FROM CURSOR'
 BEQ SAVLO2
 JSR FC_CLEAR_HOME
;
SAVLO2:
 PLA
 STA TEMP0
;
SAVLO5:
 LDY #0
 STY TEMP1
;
 JSR GETFLN
 JSR OPEN_C_15
 LDX MSLEN
 LDA TEMP0
 BEQ F_LOAD
;
SAVE:
 LDA #'W'
 STA INPBUF,X
 JSR OPENFL
 JSR STATCK
;
 STA MERPTR           ;0 = SAVE ERROR, NZ = OK
 CMP #0
 BEQ SAVE1
;
 JSR WORKING_SERPPT
;
 LDX #2
 JSR CHKOUT ;CHNL IN
 JSR SAVMOD
 JSR STATCK
 STA MERPTR		;FLAG FOR DISK FULL ERROR
 BEQ SAVE1            ;SAVE ERROR
 LDA #0 
 STA DOCUMENT_ALTERED 
; 
SAVE1:
 JSR CLOSE2
SAVE2:
 JMP ENDLOD
;
F_LOAD:
 LDA #'R'
 STA INPBUF,X
LOAD_CHAIN:
;ENTRY FOR CHAIN PRINTING
 JSR OPENFL
 JSR STATCK 		;OPENFLOK?
 TAX			;SET FLAGS
 BEQ LOAD1 		;BAD OPENFL
;
;ENTRY FOR READ DURING PRINT
;
; 
; JSR CLRCHN 		;CLEAR 15
; JSR CHNL2I
; JSR LOADR1
 JSR CLR_CHK_LOAD_FILE
; 
 JSR FC_CLEAR_HOME
;
 LDA POINTER4		;WHAT KIND OF LOAD WAS IT?
 CMP #$C1
 BNE ?OK
 LDA #30
 STA COUNT_DOWN 
; 
?LOOP:
 JSR FC_PAGE_FORWARD_NT
 BCS ?SET_HOME
 DEC COUNT_DOWN
 BNE ?LOOP 
 JSR CLOSE2
 JMP KILL_DOC		;CLEAR HOME AND MNLINE  
; 
?SET_HOME:
 JSR FC_CLEAR_HOME_NT	;GO BACK TO HOME
;
?OK:
 JSR PUSH_EOT           ;SAVE CURRENT EOT ON PSTACK        
 JSR REFORMAT_DOC
 JSR POP_AX
 CMP EOT 
 BNE ?DOC_CHANGED 
 CPX EOT+1
 BEQ ?DOC_UNCHANGED
;
?DOC_CHANGED:
 LDA #1
 STA DOCUMENT_ALTERED 
;
?DOC_UNCHANGED:
 JMP SAVE1
;
LOAD1:
;
; JSR CLALL
; JSR CLOSE2		;CLOSE 2, CLRCHN, CLALL
; LDA #0
; STA PREVIEW
;
 LDA #2
 JSR CLOSE 
; LDA #$F	
; JSR CLSANY 
 JSR CLOSE15
 JMP ENTERW		;NOW KILLS PREVIEW (EVEN FOR MERGE NAMES)
;
LOAD_NEW:
;
 JSR FC_CLEAR_HOME
LOAD_NEW1:
 LDA #<STARTRAM
 STA SAVEOT
 LDA #>STARTRAM
 STA SAVEOT+1               ;END W/BNE CAPABILITY
LOAD_RTS:
 RTS
;
;
LSTCLR:
;CLR_HOME IF ON LAST LINE
 LDA EDIT_LINE
 CMP #CMARK
 BNE ?FORCE_HOME
;
 LDA EDIT_LINE+1
 AND #$3F
 CMP #'M'-64          ;IS THIS A MARGIN CHANGE?
 BEQ ?EXIT
;
?FORCE_HOME:
;
 JSR FC_CLEAR_HOME
?EXIT
 RTS
;
DUMMY_LABEL: 
;
;
 END
;  
