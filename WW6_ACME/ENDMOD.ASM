;
!zone ENDMOD
;
!SOURCE "WWSETUP.ASM"
!SOURCE "VARIABLS.ASM"
;
SPRITE_LEFT =  124
SPRITE_TOP =  51
; $07F8-$07FF (2040-2047)
; Value * 64 = Sprite Data
;
; PUBLIC JBUFF
; PUBLIC SAVZROPG
;
;
;
;JBUFF:
;SAVZROPG:
; DS 256
;
;
!byte $FD,$FD
;
;DEAD SPACE (END OF TEXT MARKS BEFORE ACTUAL TEXT AREA)
;
ENDPROGRAM:
STARTRAM:
;
WORK_SPACE =  ENDRAM-STARTRAM
WORK_SPACE_D200 =  WORK_SPACE/200
;
!if  DEBUGGER_PRESENT { 
IO:
!text "I0"
} 
;
;
STRTUP:
;
 CLD
 LDA #$17
 STA $D018
;
 LDA #72
 STA $28F
 LDA #235
 STA $290		;DISABLE FAST LOAD WEDGE
;
 LDA #$FF
 STA GEOSFL		;DEFAULT GEOS TO NOT PRESENT
;
 JSR ROMOUT
 JSR INITILIZE40
;
 LDA $02FF		;IS GEOS PRESENT
 CMP #$A5		;DEFINED BY LOADER?
 BEQ .GEOS_YES
;
 LDX #3
.GEO_LOOP:
 LDA $C006,X
 CMP GEOSMG,X
 BNE PRTECT
 DEX
 BPL .GEO_LOOP
.GEOS_YES:
 INC GEOSFL 		;GEOSFL = 0 IF GEOS IN $FF ELSE
;
PRTECT:
;
STRTUP1:
 LDA #>ENDRAM
 STA HIMEM+1
 LDA #<ENDRAM
 STA HIMEM
;
!if  DEBUGGER_PRESENT { 
 NOP
} else { 
;
 LDA #<RTIBYT
 STA $FFFA
 STA $FFFE
;
 LDA #>RTIBYT
 STA $FFFB
 STA $FFFF
;
 JSR ROMSIN
 JSR $FF8A         ;KILL F/L AND ALL DEVICES
 JSR ROMOUT
;
 LDA #<RESTOR
 STA $318
 LDA #>RESTOR
 STA $319
;
} 
;
 LDX #0
 STX IN_DATABASE_MODE	    ;NOW IN ZP, START AT ZERO
 STX ATTRIBUTES             
 STX $9D                    ;KERNAL SETMSG FLAG
 STX PRTFEATURE
SCNCOD:
 LDA LETTAB,X   ;GET TABLE CHR
 AND #63        ;SCRN CODE!
 STA LETTAB,X
 INX
 CPX #TLENG             
 BNE SCNCOD
;
INSTALL:	                ;INSTALL VECTOR TO REPLACE KEY TABLES IN KEY SCAN
 LDA VEC_SET_KEY_MATRIX		;GET LSB ADDRESS OF ROUTINE TO SET KEY_MATRIX
 STA VSCM_COPY		      	;SAVE ORIGINAL VECTOR
 LDA VEC_SET_KEY_MATRIX+1	;GET MSB ADDRESS OF ROUTINE TO SET KEY_MATRIX
 STA VSCM_COPY+1		;SAVE ORIGINAL VECTOR
 LDA #<REPLACE_KEY_MATRIX	;LSB ADDR OF REPLACE KEY CONVERSION TABLES ROUTINE
 LDX #>REPLACE_KEY_MATRIX	;MSB ADDR OF REPLACE KEY CONVERSION TABLES ROUTINE
 STA VEC_SET_KEY_MATRIX		;SET LSB ADDRESS OF ROUTINE TO SET KEY_MATRIX
 STX VEC_SET_KEY_MATRIX+1	;SET MSB ADDRESS OF ROUTINE TO SET KEY_MATRIX
;
 LDA #$80
 STA $28A ;AUTO-REPEAT ON
;
 LDX #0
 STX JUSTIFY_FORMAT	;SET TO LEFT FOR DEFAULT
 STX EDIT_BUFFER_CHANGED
 STX CURRENT_CHAR
 STX MOVE_COPY_HL
 STX KEYABT        ;TURN ON KEYBRD ABORTING
 TXA		   ;.A = [0]
;
 INX               ;[1]
 STX ACTUAL_COLUMN ;STARTING COLUMN #
;
;.A == 0
 JSR SET_FONT      ;SET FONT TO DEFAULT
;
 LDA #8
 JSR CHROUT
;
 LDA $BA           ;DEVICE WE WERE LOADED FROM
 CMP #12           ;IF > 12
 BCS DEVFIX
 CMP #8            ;OR < 8 FORCE IT TO BE
 BCC DEVFIX
!byte $2C
DEVFIX:
 LDA #8            ;8, ELSE MAKE 8
 STA DEVICE
 STA DEVICE+1      ;SET ALL 3 DEVICES = LOAD, IF DEFAULT.TXT
 STA DEVICE+2      ;IS LOADED, THEY WILL BE REPLACED BY IT
;
 LDX #USE_DATA_DISK
 STX REGLOAD
;
!if  DEBUGGER_PRESENT { 
 LDA #2
 LDX #<IO
 LDY #>IO
 JSR OPEN15
} 
;
 LDA #9
 LDX #<FONT_DEF_NAME
 LDY #>FONT_DEF_NAME
 JSR SETNAM
;
 LDA #2
 LDX $BA
 LDY #0
 JSR SETLFS
;
 LDX #<INSTALL_FONTS
 LDY #>INSTALL_FONTS
 JSR LOAD
; LDA #2
; JSR CLOSE
; JSR CLRCHN
 JSR EM_CLOSE2_AND_CLR
;
LOAD_DEF_PRINT_FILE:
;
 LDA #2
 LDX $BA
 LDY #0
 JSR SETLFS
;
 LDA #PFILE_LEN
 LDX #<PFILE
 LDY #>PFILE
 JSR SETNAM
;
 LDX #<SAVEPRNT
 LDY #>SAVEPRNT
 JSR LOAD
; LDA #2
; JSR CLOSE
; JSR CLRCHN
 JSR EM_CLOSE2_AND_CLR
;
;
 JSR INIDSK
 JSR STATUS
 LDA #$F
 JSR CLOSE
 JSR CLALL
;
 LDA SPECIAL_BYTE
 BEQ .KEEP_DB_OVERLAY
;
 LDA #'1'			;CHOOSE CARDFILE
 STA OVERLAY_NUMBER		;SELECT OVERLAY
 JSR LOAD_OVERLAY_DIRECT	;LOAD IT
 LDA #0
 STA OVERLAY_IN_MEMORY		;FLAG IT
;
.KEEP_DB_OVERLAY:
 LDA STCOLR
 PHA
 LDA BDRBAK
 STA STCOLR
 JSR CLRBLK
 PLA
 STA STCOLR
;
;*NOTE*
;COPY THE TABS FROM DEFAULT.TXT TO THE TAB_TABLE HERE
;
;
 JSR ROMSIN
 LDA BDRBAK ;BORDER/BACK
 STA $D020
 STA $D021
 JSR ROMOUT
;
;HANDLE DEFAULT DEVICE/DRIVE STUFF
;
 LDA DRIVE+1          ;GET DRIVE 0/1
 ORA #'0'             ;MAKE ASCII
 STA THESAURUS_DRIVE
 STA DCNAME
;
 LDA DRIVE+2
 ORA #'0'
 STA PRINTER_DEF_NAME
;
 JSR ROMSIN
 SEI
 LDA #63
 STA 56578 ;BE SURE OUTPUTS FOR VICII BANK
;
 LDA 56576	;VIC BANK
 PHA		;SAVE OLD BANK
 AND #252
 ORA #1
 STA 56576      ;VIC BANK
;
 LDA 53272
 PHA		;SAVE OLD SCREEN
 AND #$F
 ORA #48
 STA 53272
;
; SPRITE locations sensitive to length of program
; Add #$40 to offsets if program grows
 LDY #$0
 STY $D010      ;SPRITE EXPAND OFF
.LOOP:
 CPY #65
 BCS .SKP
 LDA SPRITE_FIVE,Y
; STA $8500,Y
 STA $8600,Y
.SKP:
 LDA SPRITE_ONE,Y
; STA $8400,Y
 STA $8500,Y
 DEY
 BNE .LOOP
;
 LDX #4
; LDY #20
 LDY #24	; Increment this to advance sprite location
.LOOP1:
 LDA STCOLR
 STA $D027,X
 TYA
 STA $8FF8,X    ; Sprite location offsets
 DEY 
 DEX
 BPL .LOOP1
;
 LDX #SPRITE_TOP
 LDA #SPRITE_LEFT
 STA $D000
 STX $D001
 LDA #SPRITE_LEFT+24
 STA $D002
 STX $D003
 LDA #SPRITE_LEFT+24+24
 STA $D004
 STX $D005
 LDA #SPRITE_LEFT+24+24+24
 STA $D006
 STX $D007
 LDA #SPRITE_LEFT+24+24+24+24
 STA $D008
 STX $D009
;
 LDA #%00011111
 STA 53269  ;$D015 Sprite Enable Bitmask
;
;
 LDA #$8C
 STA SCRMO+1
 STA CURRENT_SCREEN_LINE
 LDA #$50
 STA SCRMO
 LDA #0
 STA COLUMN
 STA COUNT
;
 LDA #<STMESS
 STA TEXT
 STA TEXPAG
 LDA #>STMESS
 STA TEXT+1
 STA TEXPAG+1
;
 JSR RESET_1
!if ! DEBUGGER_PRESENT { 
 JSR DISPLY
} 
;
 JSR WAIT_FOR_KEY	;FREEZE
;
 JSR ROMSIN
 SEI
 PLA
 STA 53272
 PLA
 STA 56576
 LDA #%00000000
 STA 53269  ;$D015 Sprite Enable Bitmask
;
 JSR ROMOUT
;
 LDA #>STARTRAM ;START NORMAL TEXT -1 HB
 STA STTEXT+1
 LDA #<STARTRAM
 STA STTEXT
;
 JSR SETZRP
 JSR BUFSCN
;
 LDA FLASHING_CURSOR
 BEQ STRTU2
;
 LDX #2
 LDA #$EA
.KILL_FLASH:
 STA RESTRICT_CURSOR_BLINK,X
 DEX
 BPL .KILL_FLASH
;
STRTU2:
 LDA INSERTM
 EOR #$80
 STA INSERTM
 JSR FC_TOGINSERT
;
 LDA UPPER_CASE_LOCK
 BEQ .NORMAL
 JSR SET_CASE_TOGGLE
;
.NORMAL:
 JMP BEGINWW
;
EM_CLOSE2_AND_CLR:
 LDA #2
 JSR CLOSE 
 JMP CLRCHN
;
STMESS:
!if  DEBUGGER_PRESENT { 
;
} else { 
;
!byte 32,$FE
; DB '(C) 1982,89',32,$FE,32,$FE
!text "(C) 1983, 1991           VERSION V1-1.0",$FE
;
!text "PROGRAM ENHANCEMENTS & CUSTOMER SUPPORT",$FE,32,$FE
;
; DB 'PLEASE LOAD AND PRINT THE README FILE'
!byte 'P',12,5,1,19,5,32,12,15,1,4,32,1,14,4,32,16,18,9,14,20,32
!byte 20,8,5,32
!text "README ",6,9,12,5,$FE
;
; DB 'ON SIDE 2 OF YOUR PROGRAM DISK. THIS
!text 15,14,32,19,9,4,5," 2 ",15,6,32,25,15,21,18,32,16,18,15,7,18,1,13,32
!text 4,9,19,11,".  ",'T',8,9,19,$FE
;
;    '1234567890123456789012345678901234567890
; DB 'FILE EXPLAINS THE LATEST PROGRAM CHANGES',13
!byte 6,9,12,5,32
!byte 5,24,16,12,1,9,14,19,32,20,8,5,32,12,1,20,5,19,20,32
!byte 16,18,15,7,18,1,13,32,3,8,1,14,7,5,19,$FE
;
; DB 'NOT COVERED BY THE USER',39,'S MANUAL.',13,13
!byte 14,15,20,32,3,15,22,5,18,5,4,32,2,25,32,20,8,5,32
!byte 21,19,5,18,39,19,32,13,1,14,21,1,12,'.',$FE,32,$FE
; DB 207,'UR ',195,'USTOMER '
!text 'O',21,18," C",21,19,20,15,13,5,18,32
; DB 212,'ECHNICAL ',211,'UPPORT ',212,'EAM IS',13
!byte 'T',5,3,8,14,9,3,1,12,32,'S',21,16,16,15,18,20,32
!byte 'T',5,1,13,32,9,19,$FE
;
;    '1234567890123456789012345678901234567890
; DB 'READY TO ASSIST YOU WITH THE USE OF THIS
!byte 18,5,1,4,25,32,20,15,32,1,19,19,9,19,20,32,25,15,21,32
!byte 23,9,20,8,32
!byte 20,8,5,32,21,19,5,32,15,6,32,20,8,9,19,$FE
;
; DB 'TIMEWORKS PROGRAM.  YOU CAN REACH OUR
!text 'T',9,13,5,23,15,18,11,19,32,16,18,15,7,18,1,13,".  "
!byte 'Y',15,21,32,3,1,14,32,18,5,1,3,8,32,15,21,18,$FE
;    '1234567890123456789012345678901234567890
; DB 'SUPPORT TEAM BY CALLING OUR HELPLINE.
!text 'S',21,16,16,15,18,20," T",5,1,13,32
!byte 2,25,32,3,1,12,12,9,14,7,32,15,21,18,32,'H',5,12,16,'L',9,14,5,'.',$FE
; DB YOU WILL FIND THE NUMBER ON YOUR (THE INSIDE)
!byte 'Y',15,21,32
!byte 23,9,12,12,32,6,9,14,4,32,20,8,5,32,14,21,13,2,5,18,32
!byte 15,14,32,25,15,21,18,$FE
; DB 'REGISTRATION CARD (FRONT COVER OF YOUR MANUAL).
!byte 18,5,7,9,19,20,18,1,20,9,15,14,32,3,1,18,4,'.',$FE,32,$FE
; DB 'TO BECOME ELIGIBLE FOR THIS SERVICE,
!byte 'T',15,32,2,5,3,15,13,5,32,5,12,9,7,9,2,12,5,32,6,15,18,32
!byte 20,8,9,19,32,19,5,18,22,9,3,5,',',$FE
; DB 'PLEASE SEND US THE SOFTWARE REGISTRATION',13
!byte 16,12,5,1,19,5,32,19,5,14,4,32,21,19,32,20,8,5,32
!byte 19,15,6,20,23,1,18,5,32,18,5,7,9,19,20,18,1,20,9,15,14,$FE
; DB 'CARD INCLUDED IN THE PACKAGE.',13,13
!byte 3,1,18,4,32,9,14,3,12,21,4,5,4,32,9,14,32,20,8,5,32
!byte 16,1,3,11,1,7,5,'.',$FE,32,$FE
;
; DB 212,'HANK YOU FOR BUYING ',212,'IMEWORKS SOFTWARE.'
!byte 'T',8,1,14,11,32,25,15,21,32,6,15,18,32
!byte 2,21,25,9,14,7,32,'T',9,13,5,23,15,18,11,19,32
!byte 19,15,6,20,23,1,18,5,'.',$FE
;
; DB '(',208,'RESS ANY KEY TO BEGIN '
!byte 'P',18,5,19,19,32,1,14,25,32,11,5,25,32,20,15,32
!byte 2,5,7,9,14,32
!text "WORD WRITER 6.",$FE,32,$FE,32,$FE
;
} 
;
;
;
FONT_DEF_NAME:
!text "FONTS.DEF"
;
;
!eof
;
; PUBLIC STARTRAM
; PUBLIC STRTUP
; PUBLIC WORK_SPACE_D200
; EXTERN BDRBAK
; EXTERN BEGINWW
; EXTERN BYEBYE
; EXTERN BUFSCN
; EXTERN GETIN
; EXTERN CHROUT
; EXTERN CLALL
; EXTERN CLRBLK
; EXTERN CLRCHN
; EXTERN CLOSE
; EXTERN DEVICE
; EXTERN DCNAME
; EXTERN DISPLY
; EXTERN DRIVE
; EXTERN D_CLEAR_TB_MARGIN
; EXTERN D_FUTURE_EXPANSION
; EXTERN FILE_EXISTS
; EXTERN FC_TOGINSERT
; EXTERN FLASHING_CURSOR
; EXTERN INIDSK
; EXTERN INITILIZE40
; EXTERN INSERTM
; EXTERN INSTALL_FONTS
; EXTERN GEOFIL
; EXTERN GEOSMG
; EXTERN JEFF
; EXTERN JUSTIFY_FORMAT
; EXTERN LETTAB
; EXTERN LOAD
; EXTERN LOAD_OVERLAY_DIRECT
; EXTERN OPEN15
; EXTERN OVERLAY_IN_MEMORY
; EXTERN OVERLAY_NUMBER
; EXTERN PFILE_LEN
; EXTERN PFILE
; EXTERN PRINTER_DEF_NAME
; EXTERN PRKECY
; EXTERN REGLOAD
; EXTERN RESTOR
; EXTERN REPLACE_KEY_MATRIX
; EXTERN RESET_1
; EXTERN RESTRICT_CURSOR_BLINK
; EXTERN ROMOUT
; EXTERN ROMSIN
; EXTERN RTIBYT
; EXTERN SAVEPRNT
; EXTERN SPECIAL_BYTE
; EXTERN SERPPT
; EXTERN SETLFS
; EXTERN SETNAM
; EXTERN SET_CASE_TOGGLE
; EXTERN SET_FONT
; EXTERN SET_VMARGINS
; EXTERN SETZRP
; EXTERN SPRITE_ONE
; EXTERN SPRITE_FIVE
; EXTERN STATUS
; EXTERN STCOLR
; EXTERN THESAURUS_DRIVE
; EXTERN THESFLAG
; EXTERN TLENG
; EXTERN TXCOLR
; EXTERN UPPER_CASE_LOCK
; EXTERN VEC_SET_KEY_MATRIX
; EXTERN VSCM_COPY
; EXTERN WAIT_FOR_KEY
