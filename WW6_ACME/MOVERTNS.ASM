;
!zone MOVERTNS
;
;
;
MOVE_UP_ONE:
 LDY #1
MOVE_UP_Y:
 LDX #0
;
MOVEUP:
;
 LDA TEXT
 STA MUPYL1
 STA MUPYL2        ;SEED LOW BYTES LOW POINTER
; LDA TEXT+1
; STA MUPYL1+1
; STA MUPYL2+1 ;MOVE TEXT TO LOW
;
 CLC
 TYA
 ADC TEXT
 STA MUPYH1
 STA MUPYH2
 TXA
 ADC TEXT+1
 STA MUPYH1+1
 STA MUPYH2+1      ;HIGH=.X.Y+TEXT
;
 CLC
 TYA
 ADC EOT
 STA SAVEOT
 TXA
 ADC EOT+1
 STA SAVEOT+1      ;SAVEOT=.X.Y+EOT
;
; LDA SAVEOT
; CMP HIMEM
; LDA SAVEOT+1
; SBC HIMEM+1       ;DO NOT MOVE IF
; BCS MUENDT        ;SAVEOT > HIMEM (CS)
;# CAREFUL
;
 SEC
 LDA EOT
 SBC TEXT
 TAY
 LDA EOT+1
 SBC TEXT+1
 TAX               ;DISTANCE (.X.Y)=EOT-TEXT
;
 CLC
; ADC MUPYL1+1
 ADC TEXT+1
 STA MUPYL1+1
 STA MUPYL2+1      ;ADD DISTANCE HB TO LO POINTER
;
 TXA
 CLC
 ADC MUPYH1+1
 STA MUPYH1+1
 STA MUPYH2+1      ;ADD DISTANCE HB TO HI POINTER
 CPY #0            ;NO ODD BYTES?
 BEQ MOVE_ZERO_BYTE;IF NOT, SKIP
;
MUPYL1 =  *+1
MUPY:
 LDA $1234,Y
MUPYH1 =  *+1
 STA $1234,Y
 DEY
 BNE MUPY ;DO UP TO 255 BYTES
;
MUPYL2 =  *+1
MOVE_ZERO_BYTE:
 LDA $1234
MUPYH2 =  *+1
 STA $1234 ;DO LOW BYTE
 DEY
 DEC MUPYL1+1
 DEC MUPYL2+1
 DEC MUPYH1+1
 DEC MUPYH2+1
 DEX
 BPL MUPY
; CPX #$FF
; BNE MUPY
;
 LDA SAVEOT+1
 STA EOT+1
 LDA SAVEOT
 STA EOT
;
 CLC
MUENDT:
 RTS ;CC=OK CS=MOVE NOT DONE
;
!eof
;
; PUBLIC MOVEUP
; PUBLIC MOVE_UP_ONE
; PUBLIC MOVE_UP_Y
