;NED WHATLEY/JEFF LOMAX 2/12/85
!zone MLIB
;
; PUBLIC ATIMEX
; PUBLIC AXP1
; PUBLIC P1WOR
; PUBLIC CLEAR_P1
;
;TIMES
; DB 0
;
;-------PROCESSOR EXTENSIONS-------
;AXTIME PHA
; JSR CLEAR_P1
; PLA
;ATIMEX ;P1=P1+.A*.X
; STX P4 ;LSB MULTIPLICAND
; LDX #0
; STX P4+1 ;0 MSB MULTIPLICAND
;TIMESA STA TIMES ;MULTIPLIER
; JMP SHOMUL ;2BYT*1BYT MULTPLY
;
;ADEM CLC
; LDA P4 ;LSB MULTIPLICAND
; ADC P1 ;LSB PRODUCT
; STA P1 ;NEW LSB PRODUCT
; LDA P4+1 ;MSB MULTIPLICAND
; ADC P1+1 ;MSB PRODUCT
; STA P1+1 ;NEW MSB PRODUCT
;SHLEFT ASL P4 ;LSB MULTIPLICAND
; ROL P4+1 ;MSB MULTIPLICAND
;SHOMUL LSR TIMES ;GET LOW MULTIPLIER BIT
; BCS ADEM ;SET BIT ADD MULTIPLICAND TO PRODUCT & SHIFT
; BNE SHLEFT ;SHIFT IF MORE BITS IN MULTIPLIER
; RTS
;
;ADJP1 ;P1=P1+.A,.X
; CLC
; ADC P1
; STA P1
; TXA
; ADC P1+1
; STA P1+1
; RTS
;
;ADJP2 ;P2=P2+.A,.X
; CLC
; ADC P2
; STA P2
; TXA
; ADC P2+1
; STA P2+1
; RTS
;
;ADJP3 ;P3=P3+.A,.X
; CLC
; ADC P3
; STA P3
; TXA
; ADC P3+1
; STA P3+1
; RTS
;
;CLEAR_P1:
; P1 = 0
; .A = 0
;
; LDA #0
; STA P1
; STA P1+1
; RTS
;
;P1XP4 JSR AXP1
; PHA
; TXA
; PHA
; JSR P1P4
; PLA
; TAX
; PLA
; JMP P4AX
;
;STIMES:
; STA TIMES
; LDX #16
; LDA #0
;STIME1 ASL P4
; ROL P4+1
; ROL A
; BCS STIME2
; CMP TIMES
; BCC STIME3
;STIME2 SBC TIMES
; INC P4
;STIME3 DEX
; BNE STIME1
; RTS
;
;P1EQAX ;P1=.A*.X
; PHA ;SAVE
; JSR CLEAR_P1
; PLA ;RESTORE
; JMP ATIMEX ;P1=P1+.A*.X
;
;P1WOR ;SET P1 = .WOR
; JSR GETWOR ;GET .WOR
; FALL THROUGH
;P1AX ;SET P1=.A,.X
; STA P1
; STX P1+1
; RTS
;
;AXP1 ;SET .A,.X = P1
; LDA P1
; LDX P1+1
; RTS
;
;P4AX ;P4=.A,.X
; STA P4
; STX P4+1
; RTS
;
;AXP4 ;.A,.X = P2
; LDA P4
; LDX P4+1
; RTS
;
;P3WOR ;P3 = .WOR
; JSR GETWOR ;GET .WOR
;
;P3AX ;SET P3=.A,.X
; STA P3
; STX P3+1
; RTS
;
;AXP3 ;SET .A,.X = P3
; LDA P3
; LDX P3+1
; RTS
;
;INCYP1 ;INC P1 BY .Y
; TYA ;INC VALUE
; .BYT $2C ;SKIP NEXT 2BYTES
;INC2P1 ;INC P1 BY 2
; LDA #2 ;INC VALUE
; .BYT $2C ;SKIP NEXT 2BYTES
;INC1P1: ;INC P1 BY 1
; LDA #1 ;INC VALUE
;INCAP1 ;INC P1+1 BY .A
; CLC
; ADC P1 ;LSB VALUE
; STA P1 ;NEW LSB VALUE
; BCC INC0P1 ;NO MSB ADJ
; INC P1+1 ;NEW MSB VALUE
;INC0P1 RTS
;
;INC1P2 ;INC P2+1 BY 1
; LDA #1 ;INC VALUE
;INCAP2 ;INC P2+1 BY .A
; CLC
; ADC P2 ;LSB VALUE
; STA P2 ;NEW LSB VALUE
; BCC INC0P2 ;NO MSB ADJ
; INC P2+1 ;NEW MSB VALUE
;INC0P2 RTS
;
;INC1P3 ;INC P3 BY 1
; LDA #1 ;INC VALUE
;INCAP3 ;INC P3 BY .A
; CLC
; ADC P3 ;LSB VALUE
; STA P3 ;NEW LSB VALUE
; BCC INC0P3 ;NO MSB ADJ
; INC P3+1 ;NEW MSB VALUE
;INC0P3 RTS
;
;P1P4 ;P1=P4
; JSR AXP4 ;.A,.X=P4
; JMP P1AX ;P1=.A,.X
;
;P2P1:
;P2 = P1
; JSR AXP1 ;.A,.X = P1
;P2AX:
; STA P2
; STX P2+1
; RTS
;
;P1P3:
;P1=P3
;
; JSR AXP3 ;.A,.X=P3+1
; JMP P1AX ;P1+1= .A,.X
;
;P4WOR ;SET P4 TO .WOR
; JSR GETWOR ;GET .A,.X = .WOR
; JMP P4AX ;SET P4 TO .A,.X
;
PRTP0:
 LDY #5
PRTP1: ;PRINT VALUE OF PT, P1 UNHARMED
 STX SAVEYG        ;# DIGITS TO PRINT
; JSR P1XP4         ;SWAP P1 & P4,PRESERVE .X
 LDX SAVEYG
;
PRTP10:
 LDA #10 
 STA STOREY              ;DIVISOR
 STX SAVEYG    
; JSR STIMES ;DIVIDE P4 BY .A
 JSR DIV_PT_BY_S         ;Divide POINTER/STOREY  POINTER=quo .A=rem
 LDX SAVEYG
 EOR #$30 ;CONVERT TO ASCII CHA
;
 STA $400,X
 DEX
 DEY
 BNE PRTP10
 RTS
;
;----------GET WORD----------------
GETWOR ;GET 2 BYTES FOLLOWING JSR
; MAGIC NUMBERS $103,$104 ARE
; FIXED STACK LOCS
 STY SAVEYG 	;SAVE THROUGH ROUTINE
 TSX 		;GET STACK POINTER
 LDA $103,X 	;LSB RETURN FOR UTILITY CALL
 STA P4 	;SAVE IT
 CLC
 ADC #2 	;#BYTES TO SKIP ON RETURN
 STA $103,X 	;NEW LSB RETURN FOR UTILITY CALL
 LDA $104,X 	;GET MSB RETURN FOR UTILITY CALL
 STA P4+1 	;SAVE IT
;-- (P4)=BYTE BEFORE DATA
 BCC GE201 	;NO MSB ADJUSTMENT
 INC $104,X 	;INC MSB RETURN
GE201 LDY #2 	;OFFSET TO 2ND ARGUMENT
 LDA (P4),Y 	;GET 2ND ARGUMENT
 TAX 		;SAVE IT
 DEY 		;OFFSET TO 1ST ARGUMENT
 LDA (P4),Y 	;GET 1ST ARGUMENT
 LDY SAVEYG 	;RESTORE .Y
 RTS 		;RETURN
;
;
!eof
;
; PUBLIC GETWOR
