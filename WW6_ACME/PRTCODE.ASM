;
!zone PRTCODE
 ;
;
;
PRT_CODE_LEN =  19 ;(0..20)
TOTAL_CODES =  18
;BOX_WIDTH:   EQU 25
BOX_WIDTH =  23
;
FC_PRINTER_CODES:
;DOPRTCOD:
;
 LDA #$80
 STA KEYABT
; JSR ABTTOG
 JSR DISPLYPC   ;DRAW PULLDOWN FROM MEMORY
;
DOPRTC0:
 LDA #0
 STA MOVEHI     ;NUMBER OF LINE TO DISPLAY
;
DOPRTC1:
;
 LDX #45        ;'ENTER CODE (1-5) TO CHANGE'
 JSR SERPPT
;
 JSR DSETLINE
;
 LDX #0
 LDY #PRT_CODE_LEN+1
DOPRTC2:
 LDA (MSGOUT),Y
 STA VIDEO,Y
 CPX #$0 
 BNE DOPRTC2A      ;HAVE ALREADY SET RIGHTMOST NON-SPACE
 CMP #' '          ;IS THIS A SPACE?
 BEQ DOPRTC2A      ;THIS IS NOT RIGHTMOST CHAR
 TYA
 TAX               ;THIS IS
 INX               ;ONE PAST
DOPRTC2A:
 DEY
 BPL DOPRTC2
;
DOPRTC3:
;
 LDA #PRT_CODE_LEN+2 ;(0..20) 21 PRINTER CODE LENGTH
 STA MSLEN
;
; MSLEN MAXIMUM LENGTH OF STRING
;.X LENGTH OF CURRENT STRING
 JSR INPUTF ;LONG LINE LAST INPUT ERROR
 BCC DOPRTC5
;
 CMP #3 ;RUN/STOP?
 BNE DOPRTC30 ;NOT EXIT CODE
;
; JSR PUSH_TEXT
 JSR CHANGECOD ;SET UP CORRECT PRINTER CODES
; JSR POP_TEXT
;*NOTE* FORCE FORMAT ALL HERE!!!!
;
 JSR ABTTOG
 JMP FULL_SCREEN
;
DOPRTC30:
;
 CMP #145          ;CURSOR UP?
 BEQ DOPRTC4
;(CURSOR DOWN)
DOPRTC3A:
 INC MOVEHI        ;LINE # TO DISPLAY
 LDA MOVEHI
 CMP #TOTAL_CODES
 BCC DOPRTC1       ;DISPLAY NEXT LINE
 BCS DOPRTC0       ;DISPLAY 1ST LINE
;
DOPRTC4:
;CURSOR UP
 DEC MOVEHI
;LDA MOVEHI
 BPL DOPRTC1       ;DISPLAY NEXT LINE
 LDA #TOTAL_CODES-1;9
 STA MOVEHI
 BNE DOPRTC1       ;DISPALAY LAST LINE
;
DOPRTC5:
;
 LDY #0
DOPRTC6:
;MOVE USERS INPUT INTO BOX
 CPY MSLEN         ;ARE WE DONE?
 BCS DOPRTC7       ;END
 LDA VIDEO,Y
 CMP #28		;SUPPRESS LOWER CASE
 BCS .UP_OR_NUM 
 ORA #$40 
.UP_OR_NUM:
 STA (MSGOUT),Y
 INY
 BNE DOPRTC6       ;BRA
;
DOPRTC7:
;CLEAR OUT REST OF LINE
;
 CPY #PRT_CODE_LEN+2
 BCS DOPRTC8
 LDA #' '
 STA (MSGOUT),Y
 INY
 BNE DOPRTC7       ;BRA
;
DOPRTC8:
 JSR DISPLYPC      ;REDRAW BOX
 JMP DOPRTC3A      ;BUMP FORWARD
;
CHANGECOD:
;
;READ ALL TOTAL_CODES (0..15) CODES INTO BINARY STRING.
;
 JSR PUSH_TEXT
 LDA #$FF
 STA MOVEHI ;READY TO INC
;
CHANGECO0:
;
 INC MOVEHI
 LDA MOVEHI
;*NOTE* PLUS ONE HERE?
 CMP #TOTAL_CODES	
 BCS CHANGECO9     ;ALL DONE
;
 JSR DSETLINE      ;MSGOUT POINTS AT "TEXT"
;
 LDA MSGOUT
 LDX MSGOUT+1
 JSR AX_INTO_TEXT  ;TEXT POINTS AT TEXT
 JSR DECTE1        ;POINT AT ONE LESS THAN TEXT
;
 JSR POINTTOPRC    ;POINT P1 AT CODE IN MOVEHI
;
 LDX #0            ;MAXIMUM NUMBERS
 STX MOVEHI+1      ;IN MOVEHI+1
;
CHANGECO1:
 JSR PEELNU
;# NO TERMINATE < 6
;
 LDY MOVEHI+1      ;GET INDEX
 BCS CHANGECO3     ;DONE WITH THIS SET
 STA (POINTER1),Y  ;SET CODE IN TABLE
 INY
 STY MOVEHI+1
 CPY #6
 BCC CHANGECO1     ;DO NEXT NUMBER
;
CHANGECO3:
;
 CPY #6            ;DO WE NEED $FF TERMINATOR?
 BCS CHANGECO0     ;NO, TABLE IS FULL
;
 LDA #$FF
 STA (POINTER1),Y  ;YES, TABLE IS NOT FULL
 BNE CHANGECO0     ;(BRA) DO NEXT LINE
;
CHANGECO9:
;ALL DONE
; RTS               ;EXIT
 JMP POP_TEXT
;
POINTTOPRC:
;POINT P1 TO BINARY PRINTER CODE IN MOVEHI (0..N)
;
 JSR W_INTO_PT
!word BPCODES
;
 LDA MOVEHI
 LDX #6
 JSR MUL_AX_PT      ;Return POINTER = (.A*.X)+POINTER, DESTROY P1
 JMP PT_INTO_P1 
;
DISPLYPC:
; LDA #<PCBOX
; LDX #>PCBOX
; JSR AX_INTO_MSGOUT   ;POINT TO CLUSTER BOX
; JSR W_INTO_MSGOUT
; DW PCBOX
;
 LDA #7               ;CBOFFSET
 JSR PULLDN           ;DRAW THE BOX
!word PCBOX
 RTS
;
DSETLINE:
;MSGOUT POINTS TO 1ST PRINTER (TEXT) CODE
;INPUT MOVEHI (0..9)
;
 JSR W_INTO_PT
!word PCSTART;SET P1 = PCSTART
;
 LDX #BOX_WIDTH    ;WIDTH AROUND BOX
 LDA MOVEHI ;CURRENT POSITION TO SELECT
 JSR MUL_AX_PT      ;Return POINTER = (.A*.X)+POINTER, DESTROY P1
 JSR PT_INTO_AX
 JMP AX_INTO_MSGOUT 
;
;
POINT_AND_PRINT:
 STA MOVEHI
 JSR POINTTOPRC ;POINT P1 AT PRINTER CODE
;(FT)
;
PRINTPP1:
;PRINT CODE AT P1
;BINARY OUTPUT
 LDY MOVEHI
 CPY #1
 BNE .NO_FEATURE
 INC FEATUR           ;WAS UNDERLINING
;
.NO_FEATURE:
 LDY #0
 STY SESLEN
PRINTPP2:
 LDY SESLEN
 LDA (POINTER1),Y
 CMP #$FF
 BEQ PRINTPP3
 CPY #6 ;ALL DONE?
 BCS PRINTPP3
 BIT PREVIEW
 BMI PRINTPP8
;
 JSR CHROUT              ;OUT GOES CODE
PRINTPP8:
 INC SESLEN
 BNE PRINTPP2 ;BRA
;
PRINTPP3:
 RTS
;
;
PFILEB:
!text "@:"
PFILE:
!text "DEFAULT.TXT,P,W"
PFILEE:
;
PFILE_LEN =  PFILEE-PFILE-4
;
FC_SAVE_DEF_PRINT_FILE:
;
 LDX #46
 JSR PRKECY
 BNE PRINTPP3   ;EXIT
;
 LDA #0         ;SET TO DATA PATH AND CHECK DRIVE
 STA REGLOAD
;
 LDX #7
 JSR PRKECY 
;
 LDA #PFILEE-PFILEB
 LDX #<PFILEB
 LDY #>PFILEB
 JSR SETNAM
;
;*NOTE*
;COPY TABS FROM TAB TABLE TO DEF_FILE HERE
;
 LDA #3
 JSR XDEVICEN
;
 LDY #0
 JSR SETLFS
;
 JSR W_INTO_PT
!word SAVEPRNT;SET PT = START ADDRESS
 LDA #<POINTER
 LDX #<SAVEPRNTE
 LDY #>SAVEPRNTE
 JMP SAVE_RAM
;
;
!eof
;
; PUBLIC PFILE
; PUBLIC POINT_AND_PRINT
; EXTERN BPCODES
; EXTERN SAVEPRNT
; EXTERN W_INTO_MSGOUT
