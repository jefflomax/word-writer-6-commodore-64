;
!zone DICTION
!zone DICTION;DICTIONARY 
;
;
;
TLENG =  113 ;ENDSUF-LETTAB
;
;THESE VARIABLE ARE CLEARED BY LOOP, DO NOT ADJUST
;START
TSAVE:           
!word 0
DICTH:         
!word 0
WORD_COUNT:    
!word 0
UNIQUE_WORDS:   
!word 0
LSTLEN:          
!byte 0
HOLDVL: 
!byte 0
;REMCRS:
; DB 0
CWFLAG: 
!byte 0
;THESE VARIABLE ARE CLEARED BY LOOP, DO NOT ADJUST
;
;
SWPBLK:
 LDX #$1E ;BLOCK LENGTH
.LOOP:
 LDY $71,X
; LDA SAVZROPG+$71,X
 LDA PATTERN_BYTES,X 
 STA $71,X
 TYA
; STA SAVZROPG+$71,X
 STA PATTERN_BYTES,X
 DEX
 BPL .LOOP
 RTS
;
DOSPEL:
; LDX #0
; STX TSAVE
; STX TSAVE+1
; STX DICTH
; STX DICTH+1
; STX LSTLEN
; STX HOLDVL
; STX BIIT
; STX REMCRS
; STX CWFLAG
;
; LDX EOT+1      ;CHECK EOM
;# S/B ZP VARIABLE HIMEM
; INX
; CPX #>ENDRAM_MP   ;OUT OF MEMORY
; BCC ?MEM_OK
; JMP MEMERR1
;
;?MEM_OK:
 LDX #2+2+2+2+1+1+1
DOSPEL1:
 LDA #0
 STA TSAVE-1,X
 DEX
 BNE DOSPEL1 
;
;[0]
 STX BIIT
 STX LSTLEN
;
; INX            ;[1]
; STX REGLOAD    ;SELECT THES DEVICE
;THIS WAS DONE BEFORE COMING HERE
;
 LDA #'A'
 STA DCNAME+2
 JSR DISPLAYOFF
;
;
;DOSPEZ:
 LDA #27            ;'['
 JSR FC_WORK_KEY
;
 JSR FC_CLEAR_HOME
;
 JSR ABTTOG ;TURN OFF KEYBOARD ABORTING
;
 LDA #63
 STA SCASE1
 LDX #32
 JSR SERPPT
;
;RE-ENTRY FOR NEXT WORD
;
 JSR SWPBLK     ;GOTO BLOCK 1
 JSR FC_CLEAR_HOME
 JMP DOSPE5
DOSPE3:
 JSR SWPBLK
DOSPE5:
 JSR FNDSTR     ;START OF WORD
 LDY #0         ;MOVE WORD TO BUFFER
DOSPE4:
 JSR TESTCR     ;GET LETTER
 BCS DOSPE1     ;EOT OR END WORD
 STA VIDEO,Y    ;BUFFER
 INY
 BNE DOSPE4
;
DOSPE1:
 INC WORD_COUNT
 BNE DOSPE2
 INC WORD_COUNT+1 ;ADD 1 TO WORD_COUNT
;
DOSPE2:
 STY T6         ;LENGTH OF WORD
 JSR ADDYTX     ;ADVANCE TEXT
 JSR SWPBLK     ;GO TO BLOCK 2
;
; LDA STTEXT
; STA TEXT
;; LDA STTEXT+1
;; STA TEXT+1
; LDX STTEXT+1
; JSR AX_INTO_TEXT
 JSR STTEXT_TO_TEXT
;
SORT:
 LDA #0
 STA P4         ;USED TO COUNT LINE WORD INSERTED INTO
 STA BUFCHR     ;CLEAR INDEX
SORT0:
 LDY BUFCHR     ;Y = INDEX
 LDA VIDEO,Y    ;GET BUFFERCHAR
 CMP (TEXT),Y   ;CMP W/TEXT
 BEQ SORT2      ;BUFFER = TEXT
 BCC SORT3      ;BUFFER < TEXT
SORT1:
 INC P4
 JSR TEXT_TO_NEXTLINE ;NEXT WORD
 JMP SORT
;
SORT2:
 LDA #0         ;CLEAR FLAG
 STA BUFFLG     ;FOR BUFFER DONE
;
 INC BUFCHR     ;CURRENT LETT
 INY            ;A7/18
 CPY T6         ;BUFFER OUT OF CHARS?
 ROL BUFFLG     ;1=MORE CHARS  A7/18
;
 LDA (TEXT),Y   ;GET WRDLST,BUFCHR
 CMP #$FB       ;END WORD/TEXT
 LDX BUFFLG     ;PREPARE F/TEST
 BCC SORT7      ;IF NOT EOW, GO
;
 BNE SABORT     ;IS EOW? YES, LEAVE NOW
 BEQ SORT1      ;INSERT LINE & WORD
;
SORT7:
 BEQ SORT0      ;IS BUFFER EOW?
;
SORT3:
 INC UNIQUE_WORDS  ;COUNT WORD, INS LINE
 BNE .SKP
 INC UNIQUE_WORDS+1
.SKP:
;
 JSR MVTEMV     ;BUFFER < WDLIST
;
 LDY T6
 CPY #1 
 BEQ DOSPE3     ;NO ONE CHARACTER WORDS ALLOWED
 INY            ;LENGTH + RETURN
; LDX #0
; JSR MOVEUP
 JSR MOVE_UP_Y	;CLEARS .X
 LDY T6         ;LENGTH
SORTOR:
 LDA #RETURN	;HRET
; STA (TEXT),Y
;SORTOF:
; DEY
 BNE SORT4A	;FORCE JUMP INTO LOOP
SORT4:
 LDA VIDEO,Y
SORT4A:
 STA (TEXT),Y
 DEY
 BPL SORT4      ;COPY WORD TO TEXT
;
SORT5:
;
 LDA P4         ;# LINES COUNTED BEFORE INSERT
 CMP #22        ;IS THIS WORD ON THE SCREEN?
 BCS SDSKIP     ;NO DISPLAY IF IT IS "OFF" SCREEN
 JSR DISPLY
;
SDSKIP:
 LDA EOT+1      ;CHECK EOM
;
;# S/B ZP VARIABLE HIMEM
 CMP #>ENDRAM   ;OUT OF MEMORY
 BCS MEMERR     ;MEMORY ERROR!
;
SABORT:
 JMP DOSPE3     ;WORD DONE
;
TESTCR:
 LDA (TEXT),Y   ;CC = GOOD A=VAL
;
TESTC0:
 CMP #$80
 BCS TESTC2     ;CS=BAD
TESTC1: 
;
 AND #%00111111 ;KILL UPCASE/HI BITS
 CMP #27        ;CARRY CLEAR IF LESS
;
TESTC2:
 RTS
;
MEMERR: 
 JSR SWPBLK
MEMERR1:
 JSR NOT_ENOUGH_MEMORY	;DOC TOO LARGE
 JMP DSAVT1     	;LEAVE
;
FNDSTR:
;# SIMILIAR TO FIND_VALID_LETTER (PART2)
 LDY #0      ;FIND START WORD
 JSR TESTCR
 BCC TESTC2  ;FOUND START-EXIT
 CMP #ENDT
 BEQ FNDST2  ;FOUND EOT
 JSR INCTE1
 BNE FNDSTR  ;BRA
;
;
FNDST2:
 PLA
 PLA         ;RIP OFF RETURN ADDR
;
 JSR FC_CLEAR_HOME_NT
 JSR SWPBLK
 JSR FC_CLEAR_HOME_NT ;CLR/HOME, DISPLAY
 JSR DISPLY
;
; DO DICT READ/CMP
;
 JSR OPNDCT     ;OPEN UP DICTIONARY
;
 LDA #' '
 STA EDIT_LINE
 LDA #RETURN
 STA EDIT_LINE+1
;
DICTNL:
 LDX #33
 JSR SERPPT     ;'CHECKING WORDS'
DICT1:
 JSR READCW     ;DICT WORD TO BUF
 BCS DICTD0     ;DICTIONARY EMPTY
;
DICT15:
 LDY #0         ;WAS .A
 LDA VIDEO
 CMP #26
 BNE DMORE
;
 LDA VIDEO+1
 CMP #25
 BEQ DICTD0     ;AT ZY?
DMORE:
 STY BUFCHR     ;WAS .A
 LDA (TEXT),Y
 CMP VIDEO,Y
 BCC DICT6      ;IF TEXT<DICT NEXT TEXT
 BEQ DICT2      ;OK
 BCS DICTDN     ;IF TEXT>DICT GO ON
;
DICT2:
 LDY BUFCHR     ;GET INDEX
 LDA VIDEO,Y    ;COMPARE W/DISK
 CMP (TEXT),Y   ;AND MEMORY
 BEQ DICT4      ;ELEMENTS =
 BCC DICT1      ;DISK<TEXT NXTDCK
 BCS DICT6      ;TEXT<DISK NXTTXT
;
DICT4:
 INC BUFCHR     ;ADD 1 TO INDEX
 LDY BUFCHR
 CPY T6         ;LENGTH
 BEQ DICT5      ;GOTO DISK WORD IS OUT
 BCS DICT5      ;GOTO DISK WORD IS OUT
 LDA (TEXT),Y   ;THERE IS MORE DISK
 CMP #ENDT      ;IS THERE TEXT TOO?
 BCC DICT2      ;THERE IS!
 BCS DICT6      ;NO MORE TEXT
;
DICT5:
 LDA (TEXT),Y   ;DISK IS OUT
 CMP #ENDT      ;IS TEXT OUT?
 BCC DICT1      ;NO
;# WATCH THIS
 JSR KILL_LINE
 JSR TEXCF0     ;LDA (TEXT),0
 CMP #27        ;Z+1?
 BCC DICT1
 BCS D6LAST
;
DICT6:
 JSR TEXT_TO_NEXTLINE ;ADVANCE TEXT
 JSR TEXCF0           ;LDA (TEXT),0
 CMP #27              ;IS IT Z+1 (DONE)?
 BCC DICT15           ;GO DO NEXT WORD
;
D6LAST:
;
 JMP DICTD0 ;CONTINUE
;
DICABT:
 JMP ENDDIC ;QUIT
;
DICTD0:
 LDY DCNAME+2 ;GET TEXT
 INY
 TYA
DICTDN:
 PHA ;SAVE TEXT LETT
 JSR CLOSE2
 PLA
 ORA #$40
 STA DCNAME+2
 CMP #91 ;Z+1 ?
 BCS DICLD1
 LDX #0
 STX BIIT
 STX CWFLAG
 JSR OPNDC0
 JMP DICTNL           ;NEXT LETTER
;
DICLD1:
 JSR FC_CLEAR_HOME_NT
 JSR DISPLY
 LDX #37              ;USING A SUBDICTIONARY?
 JSR PRKECY
 BNE LKWRDS
;
 LDX #0
 STX REGLOAD
;
 JSR OPNUSR
 BCS LKWRDS
;
 JSR USERCK
LKWRDS:
; JSR DISPLAYOFF
; JSR FC_CLEAR_HOME_NT
 JSR FC_CLEAR_HOME_NTND
DICDN0:
 LDA TEXT
 STA TSAVE
 LDA TEXT+1
 STA TSAVE+1
;
 JSR DRAWWD           ;MOVE WORD TO INPUT AREA
 BCC DICABT           ;EOT ABORT (??)
;
 JSR SWPBLK           ;GOTO TEXT BLOCK
; JSR DISPLAYOFF
; JSR FC_CLEAR_HOME_NT ;CLEAR IT
 JSR FC_CLEAR_HOME_NTND
;
 LDA #0
 STA RPSLEN
 JSR SEARCH           ;FIND WORD
 BCS DICDN6           ;NO WORD!
;
 LDX #31
 JSR SERPPT           ;REPLACE, NEXT, EXIT
 LDY #0
 STY COUNT_DOWN
;
DCHKSC:
;
 LDX CURRENT_CHAR
;
.SLIDE_SCREEN:
;
 LDA EDIT_LINE,X
 JSR TESTC0           ;END OF WORD?
 BCS DICDN5           ;GO HILIGHT WORD
;
 JSR BUMP_COLUMN_COUNT   ;.Y DESTROYED, .X UNHARMED
 INC COUNT_DOWN
 INX
 BNE .SLIDE_SCREEN
;
DICDN5:
;
 JSR DBUMP_COLUMN_COUNT
 DEC COUNT_DOWN
 BNE DICDN5
;
 JSR DISPLAYON
;
 LDX #0
 LDY COLUMN
DICDN4:
 LDA (SCREEN),Y
 JSR TESTC0        ;END OF WORD?
 BCS DICD3M        ;EOW FOUND
;
 STA VIDEO,X
 ORA #$80          ;RVS IT
 STA (SCREEN),Y
 INX
 INY
 CPY #40
 BCC DICDN4
DICD3M:
 LDX #31
 JSR SERPP0
DICDN3:
 JSR KEYBRD
 CMP #134 	;F3
 BEQ DICDN6
 CMP #140 	;F8
 BNE DICONT
 LDX #34
 JSR SERPP0
 JSR KEYBRD     ;CMP #'Y
 BEQ DSAVT
 BNE DICD3M
DICONT:
 CMP #133    	;F1
 BNE DICDN3     ;IF NOT F1/F3 ABT
;
 STA TEMP4         ;SET TO REPLACE
 LDA #30           ;STRING LENGTH
 STA MSLEN         ;STRING LENGTH
;
 LDX SESLEN        ;CURRENT LENGTH
REREAD:
 JSR INPUTF        ;INPUT W/STRLEN IN .X
 BCS REREAD  
;
 STX RPSLEN
;
; JSR DISPLAYOFF
; JSR FC_CLEAR_HOME_NT
 JSR FC_CLEAR_HOME_NTND
 LDX RPSLEN
 BEQ BNKSKP
 JSR STRIN2        ;DO REPLACE (HOPE)
;
BNKSKP:
 LDA EOT+1         ;SIP IF BLNK
 STA DICTH
DICDN6:
 JSR SWPBLK        ;BLK2
 LDX STTEXT+1
 DEX
 CPX DICTH
 BCS D6MEMK
 JMP MEMERR        ;MEMORY ERROR!
;
D6MEMK:
 LDA TSAVE
 STA TEXT
 LDA TSAVE+1
 STA TEXT+1
 JSR TEXT_TO_NEXTLINE
 JSR TEXCF0
 BEQ ENDDIC
 JMP DICDN0
ENDDIC:
 JSR SWPBLK
DSAVT:
;
 LDX #35           ;SAVE SUSPECT WORDS?
 JSR PRKECY     
 BNE DSAVT1        ;IF NOT, HOME EXIT
 JSR EXIT_FROM_SORT
 INC BLKSET        ;LET HIM GO BACK
 RTS
;
EXIT_FROM_SORT: 
;
 JSR SWPBLK
;
DSAVT1:
;
 LDX #$FF
 STX SCASE1
;
 INX ;[0]
 STX BLKSET        ;TURN OFF SECOND DOC
;
 JSR FC_CLEAR_HOME_NT;NEED TO RESET W/O UPDATING EDIT_LINE
; JSR DISPLY
;
 JSR ABTTOG        ;TURN ON KEYBOARD ABORTING
;
 JMP FC_CLEAR_HOME_DSP
;
;
OPNDCT:
 LDX #29
 JSR SERPPT 
;
 LDX #WUNWMSGE-WUNWMSG-1
OPNDCT0:
 LDA WUNWMSG,X
 STA VIDEO,X
 DEX
 BPL OPNDCT0 
; LDA WORD_COUNT
; LDX WORD_COUNT+1
 JSR IW_INTO_AX
!word WORD_COUNT
;
 JSR AX_INTO_PT    
 LDX #4
 JSR PRTP0
; LDA UNIQUE_WORDS
; LDX UNIQUE_WORDS+1
 JSR IW_INTO_AX
!word UNIQUE_WORDS
;
 JSR AX_INTO_PT    
 LDX #16
 JSR PRTP0
;
 JSR KEYBRD              ;ALLOW RUN/STOP FROM
 CMP #3                  ;WORD COUNT PROMPT
 BNE OPNDC0
 PLA
 PLA
 JMP EXIT_FROM_SORT
;
OPNDC0:
 JSR CLALL
 JSR INIDSK
 JSR BUFSCN
 LDA #5+2
 LDX #<DCNAME
 LDY #>DCNAME
 JSR OPNDIC
 JSR STATCK
 TAX
 BEQ DCTERR
 JMP CHNL2I        ;INPUT=2 IRTS
;
DCTERR:
 JSR CLALL         ;ABORT BAD OPN
 PLA
 PLA
 LDX #0
 STX BLKSET
 BEQ EXIT_FROM_SORT
;
OPNUSR:
;
OPEN_USER_FILE:
 LDX #38
OPEN_USER_FILE_PROMPT:
 LDA #$C0
 STA POINTER4         	;IGNORE FDEFS IF PRESENT
;
OPEN_USER_FILE_1:
 JSR SERPPT
 JSR CLALL
 JSR GETFL0
;
 LDX MSLEN
 LDA #'R'
 STA INPBUF,X
;
OPEN_USER_FILE_2:
 JSR OPEN_C_15
 JSR OPENFL
OPN_OK:
;
 JSR STATCK
 TAX                  ;TEST FOR ZERO
;
 BEQ OPNUSR_ABT
 JSR CHNL2I
 JSR CHRIN
;
;# MORE LOGIC NEEDED HERE
 CMP #$FE
 BNE OPNUSR_ABT
 JSR LDTABS
 JSR CHRIN            	;IS FONT_DEF THERE?
 TAX                  	;TEST FOR ZERO
 BEQ .NO_FDEF 		;NOTHING, LOAD DATA
;
 CMP #$FE		;FONT DATA PRESENT?
 BEQ .FONT_DATA
;
 LDA #$C1
 STA POINTER4		;IGNORE CARDFILE DATA
;
.FONT_DATA: 
 JSR SAVE_LOAD_FDEF_TABLE1        ;LOAD/IGNORE FLAG IS SET
;
.NO_FDEF:
 CLC
OPNUS1:
 RTS
;
OPNUSR_ABT:
 LDA #2
 STA LAST_FIELD	;MM - COUNT ENDREC'S ON LINE
 SEC
 RTS
;
;
USERCK:
 LDA #<CBUF
 LDX #>CBUF        ;PUT WORD IN BUFFER
 LDY #63           ;CASE SUPRESS
 JSR SETUP_RW
;
 JSR READWD
 BCS USERC9
;
 LDA CBUF		;GET 1ST CHAR OF WORD
 CMP #27		;IS IT [
 BEQ USERC9		;IF SO, QUIT
;
 JSR FC_CLEAR_HOME
;
 LDY #0            ;DO ONLY SEARCH
 STY RPSLEN
 STY TEMP4
 JSR SEARCH
 BCS USERCK
;
 JSR FC_BEGINNING_OF_LINE
 JSR KILL_LINE
 JMP USERCK
;
USERC9:
 JMP CLOSE2
;
SETUP_RW_NO_CASE_MOD:
 LDY #$FF		;NO CASE MODIFICATION
;(FT)
SETUP_RW:
 STA READ_WD_SM2	;BUFFER FOR WORD
 STX READ_WD_SM2+1	;BUFFER FOR WORD
 STY READ_WD_SM1	;CASE SUPRESS
 RTS
;
READWD:
;IF BLKSET == 0, WILL READ LINE
;
 LDY #0
 STY SEARCH_STRING_LENGTH
 STY LAST_FIELD	;MM = CLEAR COUNT OF ENDREC'S
READW2:
 JSR CHRIN      ;BYTE FROM DISK
;
 CMP #ENDREC
 BNE .NOT_LAST
 INC LAST_FIELD	;MM - COUNT ENDREC'S ON LINE
.NOT_LAST:
 LDY BLKSET     ;ARE WE IN SPELL-CHECKER?
 BEQ .SKP0685
 CMP #' '
 BEQ READW2     ;NO SPACES ALLOWED
 CMP #ENDT      ;AND NO EOLS
 BCS READ_WD_EXIT      ;EOW, NO EOF
;
.SKP0685:
 LDY SEARCH_STRING_LENGTH
READ_WD_SM1 =  *+1
 AND #63
READ_WD_SM2 =  *+1
 STA $EEEE,Y       ;IN IT GOES
 LDX $90           ;STATUS EOF OR ERROR?
 BNE OPNUSR_ABT    ;SEC RTS
 CMP #ENDT
 BCS READ_WD_EXIT
;
.SKP0702:
 INC SEARCH_STRING_LENGTH
 BNE READW2
;
READ_WD_EXIT:
 CLC
 RTS
;
;
LETTER_OR_NUMBER:
;LETTER OR NUMBER CC, ELSE CS
;
 PHA
 JSR TESTC1     ;LETTER?
 PLA
 BCC ENDWC2 ;IT IS A NUMBER, OK
;ENDWCP:
 PHA
 JSR CHKNUM ;NUMBER?
 PLA
ENDWC2:
 RTS ;[CS] IT'S AN END OF WORD
;
;
;
READCW:
; LDA #4
; JSR STRIP
 JSR STRIP_4_BITS
 BCS RERROR ;ABORT
 BNE REAPC0
 BIT CWFLAG ;0 FIRST
 BMI READCZ ;LEAVE IF FF
 DEC CWFLAG ;SET TO FF
REAPC0:
 CMP #13 ;ADD SDR
 BCS READC5
 TAY ;INDEX
READC1:
 LDA #6 ;LETTER
 JSR STRIP
RERROR BCS READCZ
 PHA
 AND #%00011111
 CMP #0
 BEQ READ10 ;EXTENDER
 CMP #20 ;SUFFIX IN LETTER?
 BCS READC6
 TAX
 LDA LETTAB-1,X
 STA VIDEO,Y
READC2 INY
READC3 PLA ;RESTORE EOW
 AND #%00100000
 BEQ READC1
READC4 STY T6 ;BUFPNT
 TYA
 TAX
 LDA #$20
READCX STA VIDEO,X
 INY
 INX
 CPX LSTLEN
 BCC READCX
 STY LSTLEN
 CLC
 RTS
;
READC5 SBC #13 ;ADD SDR
 LDY T6 ;BUFPNT
 TAX
 LDA SDRTAB,X
 STA VIDEO,Y
 INY
 BNE READC4
READC6 SBC #20
READC7 ASL
 ASL ;.A*4
 TAX
 LDA #4
 STA SAVEY ;MAX LEN
READC8 LDA SUFTAB,X
 BEQ READC3 ;NXT LETT
 STA VIDEO,Y
 INX
 INY
 DEC SAVEY
 BNE READC8
READC9 BEQ READC3 ;NXT LETT
READ10:
; LDA #4
; JSR STRIP
 JSR STRIP_4_BITS
 BCS READCZ ;ERROR
 CMP #7
 BCS READ11 ;SUFX IN EXTND
 TAX
 LDA UNCLET,X
 STA VIDEO,Y
 BNE READC2 ;NXT LETT
READ11 ADC #4 ;SHOULD BE ADC #4 IF OK
 BNE READC7
READCZ:
 SEC
READ_WD_RTS:
 RTS
;
LETTAB
!text "ABCDEGHILMNOPRSTUYZ"
SDRTAB
!text "RDS"
UNCLET
!text "FJKQVWX"
SUFTAB
!text "ING",0,"VE",0,0
!text "ES",0,0,"LE",0,0
!text "OR",0,0,"AL",0,0
!text "TE",0,0,"ST",0,0
!text "ON",0,0,"ED",0,0
!text "LY",0,0,"IC",0,0
;
!text "TIONITI",0
!text "ATE",0,"ANCE"
!text "NCE",0,"NESS"
!text "MENTISM",0
!text "IST",0
ENDSUF: 
;
;
ABTTOG:
;TOGGLE KEYBRD ABORTING OFF/ON
 LDA KEYABT
 EOR #$80  
 STA KEYABT
 RTS
;
DRAWWD:
 LDY #0
 STY RETRNA     ;FLAG GET WORD NORMAL
 STY TEMP4
;
DRAWWD0:
;ENTRY FOR THESAURUS
 LDA ASCTYP
 PHA
;
 LDY #0 
 STY ASCTYP
.DRAWWD1:
;
 LDX RETRNA     ;BASH WORD?
 BEQ .YES
;
 JSR TEXCFE
 BEQ .DRAWWD3 
 BNE .DRAWWD4
;
.YES:
 JSR TESTCR
 BCC .DRAWWD4   ;ALL OK!
.NO:
 CMP #ENDT   
 BEQ .DRAWWD3   ;GET OUT, EOT
 BNE .DRAWWD2  
;
.DRAWWD4:
 STA CBUF,Y 
 LDX TEMP4      ;IF SEARCH, DO NOT DISPLAY
 BEQ .DRAWWD5
 STA VIDEO,Y   
.DRAWWD5:
; STA CBUF,Y
 JSR TOASCI
 STA INPBUF,Y
 INY
 BNE .DRAWWD1
.DRAWWD2:
;# WHO NEEDS THIS
; STY SESLEN ;[CS] OK [CC] EOT
; STY SEARCH_STRING_LENGTH
 SEC
; RTS
; BCS ?END
!byte $A9;SKIP ONE--MEANINGLESS LDA #CLC
.DRAWWD3:
 CLC         ;END OF TEXT
.END:
 STY SESLEN  ;FOR THESAURUS
 STY SEARCH_STRING_LENGTH
 PLA
 STA ASCTYP 
;
 RTS
;
WUNWMSG:
!text "00000 WORDS 00000 UNIQUE"
WUNWMSGE:
;
;
KILL_LINE:
;
 JSR Y_TO_END_LINE
 INY
 TYA
 JSR REMOVE_A_BYTES      ;DELETE THE LINE, ADJUST EOT
 JMP DISPLY
;
;
!eof
;
; PUBLIC LETTER_OR_NUMBER
; PUBLIC OPEN_USER_FILE_PROMPT
; PUBLIC OPEN_USER_FILE_2
; PUBLIC SETUP_RW_NO_CASE_MOD
; PUBLIC TLENG
; EXTERN FC_CLEAR_HOME_NTND
; EXTERN STRIP_4_BITS
; EXTERN LAST_FIELD
